<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fork on 疯狂coding</title>
    <link>http://localhost:1313/tags/fork/</link>
    <description>Recent content in fork on 疯狂coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>guonaihong</copyright>
    <lastBuildDate>Mon, 28 Dec 2020 13:45:06 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/fork/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wait for the Process to End</title>
      <link>http://localhost:1313/post/wait-for-the-process-to-end/</link>
      <pubDate>Mon, 28 Dec 2020 13:45:06 +0800</pubDate>
      
      <guid>http://localhost:1313/post/wait-for-the-process-to-end/</guid>
      <description>一、前言 前面结束过使用fork()创建多个进程，使用sem_open(), sem_wait(), sem_post()保护临界区资源。 但是遗漏了一个重要的事情，如</description>
    </item>
    
    <item>
      <title>Name Semaphore as Process Lock</title>
      <link>http://localhost:1313/post/name-semaphore-as-process-lock/</link>
      <pubDate>Fri, 25 Dec 2020 15:31:11 +0800</pubDate>
      
      <guid>http://localhost:1313/post/name-semaphore-as-process-lock/</guid>
      <description>前言 最近需要在rust里面使用多进程，有进程锁是第一步，毕竟进入临界区不能裸奔。 如果遥远的记忆没有出错，fcntl基于fd也可以实现进程锁，</description>
    </item>
    
  </channel>
</rss>
